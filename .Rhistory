install.packages('simstudy')
density <- matrix(c(period1, period2, period3, period4,
period5, period6, period7, period8),
ncol = 1)
library(ggplot2)
library(tidyverse)
library(mvtnorm)
library(Rcpp)
library(ecp)
library(simstudy)
###2 field of views, 72 time points, 8 channels(data replicated 8x)
###assume that there's 8 periods of growth in the 60timepoints
set.seed(46)
#####Univariate case
period1 <- rnorm(32, 20, 20)
period2 <- rnorm(160, 30, 50)
period3 <- rnorm(160, 25, 30)
period4 <- rnorm(160, 60, 30)
period5 <- rnorm(160, 75, 20)
period6 <- rnorm(160, 70, 20)
period7 <- rnorm(160, 35, 15)
period8 <- rnorm(160, 25, 15)
density <- matrix(c(period1, period2, period3, period4,
period5, period6, period7, period8),
ncol = 1)
View(density)
#####Univariate case
period1 <- rnorm(32, 20, 5)
period2 <- rnorm(160, 30, 5)
period3 <- rnorm(160, 25, 7)
period4 <- rnorm(160, 60, 10)
period5 <- rnorm(160, 75, 10)
period6 <- rnorm(160, 70, 12)
period7 <- rnorm(160, 35, 10)
period8 <- rnorm(160, 25, 12)
density <- matrix(c(period1, period2, period3, period4,
period5, period6, period7, period8),
ncol = 1)
View(density)
plot(density)
data.frame()?
?data.frame
?data.frame()
View(density)
str(density)
count(density)
summary(density)
id <- seq(1:1152)
data.frame(x = id, density = density)
df <- data.frame(x = id, density = density)
View(df)
#divisive algorithm
output <- e.divisive(df$density, R = 199, alpha = 1)
#divisive algorithm
output <- e.divisive(as.matrix(df$density), R = 199, alpha = 1)
output$estimates
#divisive algorithm
output <- e.divisive(as.matrix(df$density), R = 199, alpha = 2)
output$estimates
###2 field of views, 72 time points, 8 channels(data replicated 8x)
###assume that there's 8 periods of growth in the 60timepoints
set.seed(Sys.time())
###2 field of views, 72 time points, 8 channels(data replicated 8x)
###assume that there's 8 periods of growth in the 60timepoints
set.seed(Sys.time())
#####Univariate case
period1 <- rnorm(32, 20, 5)
period2 <- rnorm(160, 30, 5)
period3 <- rnorm(160, 25, 7)
period4 <- rnorm(160, 60, 10)
period5 <- rnorm(160, 75, 10)
period6 <- rnorm(160, 70, 12)
period7 <- rnorm(160, 35, 10)
period8 <- rnorm(160, 25, 12)
density <- matrix(c(period1, period2, period3, period4,
period5, period6, period7, period8),
ncol = 1)
id <- seq(1:1152)
df <- data.frame(x = id, density = density)
#divisive algorithm
output <- e.divisive(as.matrix(df$density), R = 199, alpha = 2)
output$estimates
#divisive algorithm
output <- e.divisive(as.matrix(df$density), R = 199, alpha = 1)
output$estimates
#divisive algorithm
output <- e.divisive(as.matrix(df$density), R = 199, alpha = 2)
output$estimates
###wrap up the generating and repeat 10 times
estimates <- matrix(data = NA, nrow = 10, ncol = 8)
View(estimates)
for (i in 1:10) {
set.seed(Sys.time())
period1 <- rnorm(32, 20, 5)
period2 <- rnorm(160, 30, 5)
period3 <- rnorm(160, 25, 7)
period4 <- rnorm(160, 60, 10)
period5 <- rnorm(160, 75, 10)
period6 <- rnorm(160, 70, 12)
period7 <- rnorm(160, 35, 10)
period8 <- rnorm(160, 25, 12)
density <- matrix(c(period1, period2, period3, period4,
period5, period6, period7, period8),
ncol = 1)
id <- seq(1:1152)
df <- data.frame(x = id, density = density)
estimates[i, ] = e.divisive(as.matrix(df$density),
R = 199, alpha = 2)$estimates
}
estimates[1,]
for (i in 1:10) {
set.seed(Sys.time())
period1 <- rnorm(32, 20, 5)
period2 <- rnorm(160, 30, 5)
period3 <- rnorm(160, 25, 7)
period4 <- rnorm(160, 60, 10)
period5 <- rnorm(160, 75, 10)
period6 <- rnorm(160, 70, 12)
period7 <- rnorm(160, 35, 10)
period8 <- rnorm(160, 25, 12)
density <- matrix(c(period1, period2, period3, period4,
period5, period6, period7, period8),
ncol = 1)
id <- seq(1:1152)
df <- data.frame(x = id, density = density)
estimates[i, ] = e.divisive(as.matrix(df$density),
R = 199,
k = 8,
alpha = 2)$estimates
}
for (i in 1:10) {
set.seed(Sys.time())
period1 <- rnorm(32, 20, 5)
period2 <- rnorm(160, 30, 5)
period3 <- rnorm(160, 25, 7)
period4 <- rnorm(160, 60, 10)
period5 <- rnorm(160, 75, 10)
period6 <- rnorm(160, 70, 12)
period7 <- rnorm(160, 35, 10)
period8 <- rnorm(160, 25, 12)
density <- matrix(c(period1, period2, period3, period4,
period5, period6, period7, period8),
ncol = 1)
id <- seq(1:1152)
df <- data.frame(x = id, density = density)
estimates[i, ] = e.divisive(as.matrix(df$density),
R = 199,
k = 8,
alpha = 2)$estimates
}
###wrap up the generating and repeat 10 times
estimates <- matrix(data = NA, nrow = 10, ncol = 8)
for (i in 1:10) {
set.seed(Sys.time())
period1 <- rnorm(32, 20, 5)
period2 <- rnorm(160, 30, 5)
period3 <- rnorm(160, 25, 7)
period4 <- rnorm(160, 60, 10)
period5 <- rnorm(160, 75, 10)
period6 <- rnorm(160, 70, 12)
period7 <- rnorm(160, 35, 10)
period8 <- rnorm(160, 25, 12)
density <- matrix(c(period1, period2, period3, period4,
period5, period6, period7, period8),
ncol = 1)
id <- seq(1:1152)
df <- data.frame(x = id, density = density)
estimates[i, ] = e.divisive(as.matrix(df$density),
R = 199,
k = 8,
alpha = 2)$estimates
}
estimates[i, ] = e.divisive(as.matrix(df$density),
R = 199,
alpha = 2)$estimates
estimates[i, ] = e.divisive(as.matrix(df$density),
R = 199,
alpha = 2)$estimates[1:8]
View(estimates)
for (i in 1:10) {
set.seed(Sys.time())
period1 <- rnorm(32, 20, 5)
period2 <- rnorm(160, 30, 5)
period3 <- rnorm(160, 25, 7)
period4 <- rnorm(160, 60, 10)
period5 <- rnorm(160, 75, 10)
period6 <- rnorm(160, 70, 12)
period7 <- rnorm(160, 35, 10)
period8 <- rnorm(160, 25, 12)
density <- matrix(c(period1, period2, period3, period4,
period5, period6, period7, period8),
ncol = 1)
id <- seq(1:1152)
df <- data.frame(x = id, density = density)
estimates[i, ] = e.divisive(as.matrix(df$density),
R = 199,
alpha = 2)$estimates[1:8]
}
estimates
plot(estimates)
as.data.frame(estimates)
plot(as.data.frame(estimates))
estimates <- as.data.frame(estimates)
plot(estimates$V6)
estimates <- as.data.frame(estimates)
sixth.change.point <- estimates$V6
estimates
View(estimates)
colnames(estimates)
ggplot(data = sixth.change.point, aes('V6')) +
geom_smooth(method = lm)
ggplot(data = sixth.change.point, aes('V6'))
ggplot(data = estimates, aes('V6'))
index <- seq(1:10)
sixth.change.point <- data.frame(x = index, '6th change points' = estimates$V6)
sixth.change.point
ggplot(data = sixth.change.point, aes(x, '6th change points'))
geom_line()
geom_line(aes(y=sixth.change.point$X6th.change.points))
sixth.change.point
geom_line(aes(y=sixth.change.point$X6th.change.points))
estimates
geom_line(aes(y=estimates$V6))
View(output)
sixth.change.point
sixth.change.point <- data.frame(x = index, V6 = estimates$V6)
geom_line(aes(y=V6))
ggplot(data = sixth.change.point, aes(index)) +
geom_line(aes(y=V6))
sixth.change.point <- data.frame('iteration' = index, '6th change point' = estimates$V6)
ggplot(data = sixth.change.point, aes(sixth.change.point$iteration)) +
geom_line(aes(y=sixth.change.point$X6th.change.point))
ggplot(data = sixth.change.point, aes(iteration)) +
geom_line(aes(y=X6th.change.point))
ggplot(data = sixth.change.point, aes(iteration)) +
geom_line(aes(y=6th.change.point))
X
ggplot(data = sixth.change.point, aes(iteration)) +
geom_line(aes(y=X6th.change.point))
ggplot(data = sixth.change.point, aes(iteration)) +
geom_line(aes(y=X6th.change.point)) +
geom_smooth(method = lm, aes(y=X6th.change.point))
estimates
output$cluster
output$k.hat
output$p.values
View(estimates)
estimates
df
density
View(df)
View(estimates)
